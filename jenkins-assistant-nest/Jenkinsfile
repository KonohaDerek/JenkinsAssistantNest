env.buildColor = ''
env.targetUrl = 'https://gitlab.howdesign.com.tw/devops/jenkins-assistant-nest'
env.namespace='DevOps'
env.project = 'jenkins-assistant-nest'
env.GIT_BRANCH = "master"
env.GIT_URL = 'gitlab.howdesign.com.tw/devops/jenkins-assistant-nest.git'
env.VERSION_TAG = "1.0.${BUILD_NUMBER}"
env.IMAGE_TAG = 'prod'
env.IMAGE_NAME = 'asia-east1-docker.pkg.dev/howgroup-devops-2021/devops/jenkins-assistant-nest'

node {
  try {
    start()
    pipeline()
    success()
  } catch (e) {
    failure(e)
    throw(e)
  }
}

def pipeline() {
  stage('Clean Workspace') {
    cleanWs()
  }
  stage('Checkout') {
    checkout scm
       // 獲取 Git Commit SHA 並設定為環境變數
    script {
      GIT_COMMIT_SHA = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
      env.GIT_COMMIT = GIT_COMMIT_SHA
      env.SHORT_COMMIT = GIT_COMMIT_SHA.take(7)
    }

    sh 'env'
  }
 stage('Testing & Build') {
      clientImage = docker.build("${env.IMAGE_NAME}:{env.IMAGE_TAG}", "-f jenkins-assistant-nest/Dockerfile ./jenkins-assistant-nest")
  }
  stage('Push') {
    withCredentials([file(credentialsId: "cicd-artifact-registry-key", variable: 'GCR_CRED')]){
      sh 'cat "${GCR_CRED}" | docker login -u _json_key --password-stdin https://asia-east1-docker.pkg.dev'
      docker.image("${env.IMAGE_NAME}:{env.IMAGE_TAG}").push("${env.VERSION_TAG}")
    }
  }
}
